pipeline:
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GitHub_Drone_Plugins_Org
        repoName: drone-docker
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: Test
        identifier: Test
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            paths: []
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: GO VET
                  identifier: Run_1
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: golang:1.23.0
                    shell: Sh
                    command: go vet ./...
              - step:
                  type: Run
                  name: GO TEST
                  identifier: Run_2
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: golang:1.23.0
                    shell: Sh
                    command: go test -cover ./...
    - parallel:
        - stage:
            name: linux-amd64
            identifier: linamd64
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Linux
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      type: Run
                      name: Build Binary
                      identifier: Build_Push
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.23.0
                        shell: Sh
                        command: go build -a -tags netgo -o release/linux/amd64/drone-<+matrix.repo> ./cmd/drone-<+matrix.repo>
                        envVariables:
                          CGO_ENABLED: "0"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - heroku
                            - acr
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Docker_Build_and_Push
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/<+matrix.repo>
                          dockerfile: docker/<+matrix.repo>/Dockerfile.linux.amd64
                          auto_tag: "true"
                          auto_tag_suffix: linux-amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - heroku
                            - acr
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/<+matrix.repo>
                        tags:
                          - linux-amd64
                        caching: true
                        dockerfile: docker/<+matrix.repo>/Dockerfile.linux.amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - heroku
                            - acr
        - stage:
            name: linux-arm64
            identifier: linarm64
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Linux
                arch: Arm64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      type: Run
                      name: Build Binary
                      identifier: buildpush
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.23.0
                        shell: Sh
                        command: go build -a -tags netgo -o release/linux/arm64/drone-<+matrix.repo> ./cmd/drone-<+matrix.repo>
                        envVariables:
                          CGO_ENABLED: "0"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - heroku
                            - acr
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Docker_Build_and_Push
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/<+matrix.repo>
                          dockerfile: docker/<+matrix.repo>/Dockerfile.linux.arm64
                          auto_tag: "true"
                          auto_tag_suffix: linux-arm64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - heroku
                            - acr
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/<+matrix.repo>
                        tags:
                          - linux-arm64
                        caching: true
                        dockerfile: docker/<+matrix.repo>/Dockerfile.linux.arm64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - heroku
                            - acr
        - stage:
            name: win-1809-amd64
            identifier: win1809amd64
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              caching:
                enabled: true
              infrastructure:
                type: VM
                spec:
                  type: Pool
                  spec:
                    poolName: windows-2019
                    os: Windows
              execution:
                steps:
                  - step:
                      type: Run
                      name: Build Binary
                      identifier: go_build
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.23.0
                        shell: Sh
                        command: |-
                          # disable cgo
                          export CGO_ENABLED=0

                          go build -o release/windows/amd64/drone-<+matrix.repo>.exe ./cmd/drone-<+matrix.repo>
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - acr
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Docker_Build_and_Push1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/<+matrix.repo>
                          dockerfile: docker/<+matrix.repo>/Dockerfile.windows.amd64.1809
                          auto_tag: "true"
                          auto_tag_suffix: windows-1809-amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - acr
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_2
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/<+matrix.repo>
                        tags:
                          - windows-1809-amd64
                        caching: false
                        dockerfile: docker/<+matrix.repo>/Dockerfile.windows.amd64.1809
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - acr
            delegateSelectors:
              - windows-vm
        - stage:
            name: win-ltsc2022-amd64
            identifier: winamd64
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              caching:
                enabled: false
                paths: []
              platform:
                os: Windows
                arch: Amd64
              runtime:
                type: Cloud
                spec: {}
              execution:
                steps:
                  - step:
                      type: Run
                      name: Build Binary -ltsc2022
                      identifier: build_amd64ltsc2022
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: golang:1.23.0
                        shell: Sh
                        command: |-
                          # disable cgo
                          export CGO_ENABLED=0

                          go build -o release/windows/amd64/drone-<+matrix.repo>.exe ./cmd/drone-<+matrix.repo>
                        envVariables:
                          CGO_ENABLED: "0"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - acr
                  - step:
                      type: Plugin
                      name: Build and Push on Tag
                      identifier: Docker_Build_and_Push1
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        image: plugins/docker
                        settings:
                          username: drone
                          password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                          repo: plugins/<+matrix.repo>
                          dockerfile: docker/<+matrix.repo>/Dockerfile.windows.amd64.ltsc2022
                          auto_tag: "true"
                          auto_tag_suffix: windows-ltsc2022-amd64
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "tag"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - acr
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build and Push on Branch
                      identifier: BuildAndPushDockerRegistry_2
                      spec:
                        connectorRef: Plugins_Docker_Hub_Connector
                        repo: plugins/<+matrix.repo>
                        tags:
                          - windows-ltsc2022-amd64
                        caching: false
                        dockerfile: docker/<+matrix.repo>/Dockerfile.windows.amd64.ltsc2022
                      when:
                        stageStatus: Success
                        condition: <+codebase.build.type> == "branch"
                      strategy:
                        matrix:
                          repo:
                            - docker
                            - gcr
                            - gar
                            - ecr
                            - acr
              buildIntelligence:
                enabled: false
    - stage:
        name: Manifest and Release
        identifier: Manifest
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            paths: []
          execution:
            steps:
              - step:
                  type: Plugin
                  name: Manifest
                  identifier: Plugin_1
                  spec:
                    connectorRef: Plugins_Docker_Hub_Connector
                    image: plugins/manifest
                    settings:
                      username: drone
                      password: <+secrets.getValue("Plugins_Docker_Hub_Pat")>
                      auto_tag: "true"
                      ignore_missing: "true"
                      spec: docker/<+matrix.repo>/manifest.tmpl
                  when:
                    stageStatus: Success
                    condition: <+codebase.build.type> == "tag" || <+codebase.build.type> == "branch"
                  strategy:
                    matrix:
                      repo:
                        - docker
                        - gcr
                        - gar
                        - ecr
                        - heroku
                        - acr
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
  identifier: dronedockerharness
  projectIdentifier: Drone_Plugins
  name: drone-docker-harness
