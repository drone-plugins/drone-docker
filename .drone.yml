---
kind: pipeline
name: linux-amd64-docker

steps:
- name: build-push
  pull: always
  image: golang:1.11
  commands:
  - "go build -v -ldflags \"-X main.version=${DRONE_COMMIT_SHA:0:8}\" -a -tags netgo -o release/linux/amd64/drone-docker ./cmd/drone-docker"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.11
  commands:
  - "go build -v -ldflags \"-X main.version=${DRONE_TAG##v}\" -a -tags netgo -o release/linux/amd64/drone-docker ./cmd/drone-docker"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.11
  commands:
  - ./release/linux/amd64/drone-docker --help

- name: docker-config
  image: bash
  commands:
  - sed -i 's@DOCKERCREDS@'"$DOCKER_CREDS"'@' docker/docker/config.json
  - sed -i 's@HARBORCREDS@'"$HARBOR_CREDS"'@' docker/docker/config.json
  - sed -i 's@HARBORMIRROR@'"$HARBOR_MIRROR"'@' docker/docker/daemon.json
  environment:
    DOCKER_CREDS:
      from_secret: DOCKER_CREDS
    HARBOR_CREDS:
      from_secret: HARBOR_CREDS
    HARBOR_MIRROR:
      from_secret: HARBOR_MIRROR

- name: docker-build-and-push
  image: plugins/docker:19.03.8
  settings:
    dockerfile: docker/docker/Dockerfile.linux.amd64
    registry: 
      from_secret: HARBOR_REGISTRY
    repo:
      from_secret: HARBOR_REPO
    username: drone
    password:
      from_secret: harbor_drone_pass
    env_file: "docker_args"
  volumes:
    - name: docker-sock
      path: /var/run/docker.sock
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/main
  - "refs/tags/**"
  - "refs/pull/**"

volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock
